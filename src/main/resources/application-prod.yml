spring:
  profiles: prod
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: ${DB_MAX_POOL:30}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
url-shortener:
  provider:
    api-url: ${URL_SHORTENER_API_URL}
    api-key: ${URL_SHORTENER_API_KEY}
  cache:
    namespace: ${CACHE_NAMESPACE:}
    ttl-seconds: ${CACHE_TTL_SECONDS:2592000}
resilience4j:
  retry:
    instances:
      externalShortener:
        max-attempts: 3
        wait-duration: 500ms
  circuitbreaker:
    instances:
      externalShortener:
        sliding-window-size: 20
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
logging:
  level:
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} - %msg%n"